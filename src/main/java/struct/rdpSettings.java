package struct;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import struct.rdpSettings_library.*;

/**
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@com.sun.jna.Structure.FieldOrder({
       "instance", "padding001", "ServerMode", "ShareId", "PduSource", "ServerPort", "ServerHostname", "Username", "Password", "Domain", "PasswordHash", "WaitForOutputBufferFlush", "MaxTimeInCheckLoop", "AcceptedCert", "AcceptedCertLength", "padding0064", "ThreadingFlags", "padding0128", "RdpVersion", "DesktopWidth", "DesktopHeight", "ColorDepth", "ConnectionType", "ClientBuild", "ClientHostname", "ClientProductId", "EarlyCapabilityFlags", "NetworkAutoDetect", "SupportAsymetricKeys", "SupportErrorInfoPdu", "SupportStatusInfoPdu", "SupportMonitorLayoutPdu", "SupportGraphicsPipeline", "SupportDynamicTimeZone", "SupportHeartbeatPdu", "DesktopPhysicalWidth", "DesktopPhysicalHeight", "DesktopOrientation", "DesktopScaleFactor", "DeviceScaleFactor", "padding0192", "UseRdpSecurityLayer", "EncryptionMethods", "ExtEncryptionMethods", "EncryptionLevel", "ServerRandom", "ServerRandomLength", "ServerCertificate", "ServerCertificateLength", "ClientRandom", "ClientRandomLength", "padding0256", "ChannelCount", "ChannelDefArraySize", "ChannelDefArray", "padding0320", "ClusterInfoFlags", "RedirectedSessionId", "ConsoleSession", "padding0384", "MonitorCount", "MonitorDefArraySize", "MonitorDefArray", "SpanMonitors", "UseMultimon", "ForceMultimon", "DesktopPosX", "DesktopPosY", "ListMonitors", "MonitorIds", "NumMonitorIds", "MonitorLocalShiftX", "MonitorLocalShiftY", "HasMonitorAttributes", "padding0448", "padding0512", "MultitransportFlags", "SupportMultitransport", "padding0576", "padding0640", "AlternateShell", "ShellWorkingDirectory", "padding0704", "AutoLogonEnabled", "CompressionEnabled", "DisableCtrlAltDel", "EnableWindowsKey", "MaximizeShell", "LogonNotify", "LogonErrors", "MouseAttached", "MouseHasWheel", "RemoteConsoleAudio", "AudioPlayback", "AudioCapture", "VideoDisable", "PasswordIsSmartcardPin", "UsingSavedCredentials", "ForceEncryptedCsPdu", "HiDefRemoteApp", "CompressionLevel", "padding0768", "IPv6Enabled", "ClientAddress", "ClientDir", "padding0832", "AutoReconnectionEnabled", "AutoReconnectMaxRetries", "ClientAutoReconnectCookie", "ServerAutoReconnectCookie", "PrintReconnectCookie", "padding0896", "ClientTimeZone", "DynamicDSTTimeZoneKeyName", "DynamicDaylightTimeDisabled", "padding0960", "PerformanceFlags", "AllowFontSmoothing", "DisableWallpaper", "DisableFullWindowDrag", "DisableMenuAnims", "DisableThemes", "DisableCursorShadow", "DisableCursorBlinking", "AllowDesktopComposition", "padding1024", "RemoteAssistanceMode", "RemoteAssistanceSessionId", "RemoteAssistancePassStub", "RemoteAssistancePassword", "RemoteAssistanceRCTicket", "EncomspVirtualChannel", "RemdeskVirtualChannel", "LyncRdpMode", "RemoteAssistanceRequestControl", "padding1088", "TlsSecurity", "NlaSecurity", "RdpSecurity", "ExtSecurity", "Authentication", "RequestedProtocols", "SelectedProtocol", "NegotiationFlags", "NegotiateSecurityLayer", "RestrictedAdminModeRequired", "AuthenticationServiceClass", "DisableCredentialsDelegation", "AuthenticationLevel", "AllowedTlsCiphers", "VmConnectMode", "NtlmSamFile", "FIPSMode", "TlsSecLevel", "padding1152", "MstscCookieMode", "CookieMaxLength", "PreconnectionId", "PreconnectionBlob", "SendPreconnectionPdu", "padding1216", "RedirectionFlags", "TargetNetAddress", "LoadBalanceInfo", "LoadBalanceInfoLength", "RedirectionUsername", "RedirectionDomain", "RedirectionPassword", "RedirectionPasswordLength", "RedirectionTargetFQDN", "RedirectionTargetNetBiosName", "RedirectionTsvUrl", "RedirectionTsvUrlLength", "TargetNetAddressCount", "TargetNetAddresses", "TargetNetPorts", "RedirectionAcceptedCert", "RedirectionAcceptedCertLength", "RedirectionPreferType", "padding1280", "Password51", "Password51Length", "SmartcardLogon", "PromptForCredentials", "padding1284", "SmartcardCertificate", "SmartcardPrivateKey", "padding1287", "SmartcardEmulation", "Pkcs11Module", "PkinitAnchors", "KeySpec", "CardName", "ReaderName", "ContainerName", "CspName", "padding1344", "KerberosKdc", "KerberosRealm", "KerberosStartTime", "KerberosLifeTime", "KerberosRenewableLifeTime", "KerberosCache", "KerberosArmor", "padding1408", "IgnoreCertificate", "CertificateName", "CertificateFile", "PrivateKeyFile", "RdpKeyFile", "RdpServerRsaKey", "RdpServerCertificate", "ExternalCertificateManagement", "CertificateContent", "PrivateKeyContent", "RdpKeyContent", "AutoAcceptCertificate", "AutoDenyCertificate", "CertificateAcceptedFingerprints", "CertificateUseKnownHosts", "CertificateCallbackPreferPEM", "padding1472", "padding1536", "Workarea", "Fullscreen", "PercentScreen", "GrabKeyboard", "Decorations", "MouseMotion", "WindowTitle", "ParentWindowId", "padding1544", "AsyncUpdate", "AsyncChannels", "padding1548", "ToggleFullscreen", "WmClass", "EmbeddedWindow", "SmartSizing", "XPan", "YPan", "SmartSizingWidth", "SmartSizingHeight", "PercentScreenUseWidth", "PercentScreenUseHeight", "DynamicResolutionUpdate", "GrabMouse", "padding1601", "SoftwareGdi", "LocalConnection", "AuthenticationOnly", "CredentialsFromStdin", "UnmapButtons", "OldLicenseBehaviour", "MouseUseRelativeMove", "padding1664", "ComputerName", "padding1728", "ConnectionFile", "AssistanceFile", "padding1792", "HomePath", "ConfigPath", "CurrentPath", "padding1856", "DumpRemoteFx", "PlayRemoteFx", "DumpRemoteFxFile", "PlayRemoteFxFile", "TransportDump", "TransportDumpFile", "TransportDumpReplay", "DeactivateClientDecoding", "padding1920", "padding1984", "GatewayUsageMethod", "GatewayPort", "GatewayHostname", "GatewayUsername", "GatewayPassword", "GatewayDomain", "GatewayCredentialsSource", "GatewayUseSameCredentials", "GatewayEnabled", "GatewayBypassLocal", "GatewayRpcTransport", "GatewayHttpTransport", "GatewayUdpTransport", "GatewayAccessToken", "GatewayAcceptedCert", "GatewayAcceptedCertLength", "GatewayHttpUseWebsockets", "padding2015", "ProxyType", "ProxyHostname", "ProxyPort", "ProxyUsername", "ProxyPassword", "padding2112", "RemoteApplicationMode", "RemoteApplicationName", "RemoteApplicationIcon", "RemoteApplicationProgram", "RemoteApplicationFile", "RemoteApplicationGuid", "RemoteApplicationCmdLine", "RemoteApplicationExpandCmdLine", "RemoteApplicationExpandWorkingDir", "DisableRemoteAppCapsCheck", "RemoteAppNumIconCaches", "RemoteAppNumIconCacheEntries", "RemoteAppLanguageBarSupported", "RemoteWndSupportLevel", "RemoteApplicationSupportLevel", "RemoteApplicationSupportMask", "RemoteApplicationWorkingDir", "padding2176", "padding2240", "ReceivedCapabilities", "ReceivedCapabilitiesSize", "padding2304", "OsMajorType", "OsMinorType", "RefreshRect", "SuppressOutput", "FastPathOutput", "SaltedChecksum", "LongCredentialsSupported", "NoBitmapCompressionHeader", "BitmapCompressionDisabled", "padding2368", "DesktopResize", "DrawAllowDynamicColorFidelity", "DrawAllowColorSubsampling", "DrawAllowSkipAlpha", "padding2432", "OrderSupport", "BitmapCacheV3Enabled", "AltSecFrameMarkerSupport", "AllowUnanouncedOrdersFromServer", "padding2497", "BitmapCacheEnabled", "BitmapCacheVersion", "AllowCacheWaitingList", "BitmapCachePersistEnabled", "BitmapCacheV2NumCells", "BitmapCacheV2CellInfo", "padding2560", "ColorPointerFlag", "PointerCacheSize", "padding2624", "KeyboardRemappingList", "KeyboardCodePage", "KeyboardLayout", "KeyboardType", "KeyboardSubType", "KeyboardFunctionKey", "ImeFileName", "UnicodeInput", "FastPathInput", "MultiTouchInput", "MultiTouchGestures", "KeyboardHook", "HasHorizontalWheel", "HasExtendedMouseEvent", "SuspendInput", "padding2688", "BrushSupportLevel", "padding2752", "GlyphSupportLevel", "GlyphCache", "FragCache", "padding2816", "OffscreenSupportLevel", "OffscreenCacheSize", "OffscreenCacheEntries", "padding2880", "VirtualChannelCompressionFlags", "VirtualChannelChunkSize", "padding2944", "SoundBeepsEnabled", "padding3008", "padding3072", "padding3136", "padding3200", "padding3264", "padding3328", "MultifragMaxRequestSize", "padding3392", "LargePointerFlag", "padding3456", "CompDeskSupportLevel", "padding3520", "SurfaceCommandsEnabled", "FrameMarkerCommandEnabled", "SurfaceFrameMarkerEnabled", "padding3584", "padding3648", "RemoteFxOnly", "RemoteFxCodec", "RemoteFxCodecId", "RemoteFxCodecMode", "RemoteFxImageCodec", "RemoteFxCaptureFlags", "padding3712", "NSCodec", "NSCodecId", "FrameAcknowledge", "NSCodecColorLossLevel", "NSCodecAllowSubsampling", "NSCodecAllowDynamicColorFidelity", "padding3776", "JpegCodec", "JpegCodecId", "JpegQuality", "padding3840", "GfxThinClient", "GfxSmallCache", "GfxProgressive", "GfxProgressiveV2", "GfxH264", "GfxAVC444", "GfxSendQoeAck", "GfxAVC444v2", "GfxCapsFilter", "GfxPlanar", "padding3904", "BitmapCacheV3CodecId", "padding3968", "DrawNineGridEnabled", "DrawNineGridCacheSize", "DrawNineGridCacheEntries", "padding4032", "DrawGdiPlusEnabled", "DrawGdiPlusCacheEnabled", "padding4096", "padding4160", "DeviceRedirection", "DeviceCount", "DeviceArraySize", "DeviceArray", "padding4288", "RedirectDrives", "RedirectHomeDrive", "DrivesToRedirect", "padding4416", "RedirectSmartCards", "padding4544", "RedirectPrinters", "padding4672", "RedirectSerialPorts", "RedirectParallelPorts", "PreferIPv6OverIPv4", "padding4800", "RedirectClipboard", "padding4928", "StaticChannelCount", "StaticChannelArraySize", "StaticChannelArray", "padding5056", "DynamicChannelCount", "DynamicChannelArraySize", "DynamicChannelArray", "SupportDynamicChannels", "padding5184", "SupportEchoChannel", "SupportDisplayControl", "SupportGeometryTracking", "SupportSSHAgentChannel", "SupportVideoOptimized", "RDP2TCPArgs", "TcpKeepAlive", "TcpKeepAliveRetries", "TcpKeepAliveDelay", "TcpKeepAliveInterval", "TcpAckTimeout", "ActionScript", "Floatbar", "TcpConnectTimeout", "padding5312", "num_extensions", "extensions", "SettingsModified", "XSelectionAtom"
        })
public class rdpSettings extends Structure {
    /** 0 */
    public Pointer instance;
    /** 1 */
    public UINT64[] padding001 = new UINT64[16 - 1];
    /**
     * Core Parameters<br>
     * 16
     */
    public boolean ServerMode;
    /** 17 */
    public UINT32 ShareId;
    /** 18 */
    public UINT32 PduSource;
    /** 19 */
    public UINT32 ServerPort;
    /** 20 */
    public Pointer ServerHostname;
    /** 21 */
    public Pointer Username;
    /** 22 */
    public Pointer Password;
    /** 23 */
    public Pointer Domain;
    /** 24 */
    public Pointer PasswordHash;
    /** 25 */
    public boolean WaitForOutputBufferFlush;
    /** 26 */
    public UINT32 MaxTimeInCheckLoop;
    /** 27 */
    public Pointer AcceptedCert;
    /** 28 */
    public UINT32 AcceptedCertLength;
    /** 29 */
    public UINT64[] padding0064 = new UINT64[64 - 29];
    /**
     * resource management related options<br>
     * 64
     */
    public UINT32 ThreadingFlags;
    /** 65 */
    public UINT64[] padding0128 = new UINT64[128 - 65];
    /**
     * Client/Server Core Data<br>
     * 128
     */
    public UINT32 RdpVersion;
    /** 129 */
    public UINT32 DesktopWidth;
    /** 130 */
    public UINT32 DesktopHeight;
    /** 131 */
    public UINT32 ColorDepth;
    /** 132 */
    public UINT32 ConnectionType;
    /** 133 */
    public UINT32 ClientBuild;
    /** 134 */
    public Pointer ClientHostname;
    /** 135 */
    public Pointer ClientProductId;
    /** 136 */
    public UINT32 EarlyCapabilityFlags;
    /** 137 */
    public boolean NetworkAutoDetect;
    /** 138 */
    public boolean SupportAsymetricKeys;
    /** 139 */
    public boolean SupportErrorInfoPdu;
    /** 140 */
    public boolean SupportStatusInfoPdu;
    /** 141 */
    public boolean SupportMonitorLayoutPdu;
    /** 142 */
    public boolean SupportGraphicsPipeline;
    /** 143 */
    public boolean SupportDynamicTimeZone;
    /** 144 */
    public boolean SupportHeartbeatPdu;
    /** 145 */
    public UINT32 DesktopPhysicalWidth;
    /** 146 */
    public UINT32 DesktopPhysicalHeight;
    /** 147 */
    public UINT16 DesktopOrientation;
    /** 148 */
    public UINT32 DesktopScaleFactor;
    /** 149 */
    public UINT32 DeviceScaleFactor;
    /** 150 */
    public UINT64[] padding0192 = new UINT64[192 - 150];
    /**
     * Client/Server Security Data<br>
     * 192
     */
    public boolean UseRdpSecurityLayer;
    /** 193 */
    public UINT32 EncryptionMethods;
    /** 194 */
    public UINT32 ExtEncryptionMethods;
    /** 195 */
    public UINT32 EncryptionLevel;
    /** 196 */
    public Pointer ServerRandom;
    /** 197 */
    public UINT32 ServerRandomLength;
    /** 198 */
    public Pointer ServerCertificate;
    /** 199 */
    public UINT32 ServerCertificateLength;
    /** 200 */
    public Pointer ClientRandom;
    /** 201 */
    public UINT32 ClientRandomLength;
    /** 202 */
    public UINT64[] padding0256 = new UINT64[256 - 202];
    /**
     * Client Network Data<br>
     * 256
     */
    public UINT32 ChannelCount;
    /** 257 */
    public UINT32 ChannelDefArraySize;
    /** 258 */
    public CHANNEL_DEF ChannelDefArray;
    /** 259 */
    public UINT64[] padding0320 = new UINT64[320 - 259];
    /**
     * Client Cluster Data<br>
     * 320
     */
    public UINT32 ClusterInfoFlags;
    /** 321 */
    public UINT32 RedirectedSessionId;
    /** 322 */
    public boolean ConsoleSession;
    /** 323 */
    public UINT64[] padding0384 = new UINT64[384 - 323];
    /**
     * Client Monitor Data<br>
     * 384
     */
    public UINT32 MonitorCount;
    /** 385 */
    public UINT32 MonitorDefArraySize;
    /** 386 */
    public rdpMonitor MonitorDefArray;
    /** 387 */
    public boolean SpanMonitors;
    /** 388 */
    public boolean UseMultimon;
    /** 389 */
    public boolean ForceMultimon;
    /** 390 */
    public UINT32 DesktopPosX;
    /** 391 */
    public UINT32 DesktopPosY;
    /** 392 */
    public boolean ListMonitors;
    /** 393 */
    public UINT32 MonitorIds;
    /** 394 */
    public UINT32 NumMonitorIds;
    /** 395 */
    public UINT32 MonitorLocalShiftX;
    /** 396 */
    public UINT32 MonitorLocalShiftY;
    /** 397 */
    public boolean HasMonitorAttributes;
    /** 398 */
    public UINT64[] padding0448 = new UINT64[448 - 398];
    /**
     * Client Message Channel Data<br>
     * 448
     */
    public UINT64[] padding0512 = new UINT64[512 - 448];
    /**
     * Client Multitransport Channel Data<br>
     * 512
     */
    public UINT32 MultitransportFlags;
    /** 513 */
    public boolean SupportMultitransport;
    /** 514 */
    public UINT64[] padding0576 = new UINT64[576 - 514];
    /** 576 */
    public UINT64[] padding0640 = new UINT64[640 - 576];
    /**
     * Client Info (Shell)<br>
     * 640
     */
    public Pointer AlternateShell;
    /** 641 */
    public Pointer ShellWorkingDirectory;
    /** 642 */
    public UINT64[] padding0704 = new UINT64[704 - 642];
    /**
     * Client Info Flags<br>
     * 704
     */
    public boolean AutoLogonEnabled;
    /** 705 */
    public boolean CompressionEnabled;
    /** 706 */
    public boolean DisableCtrlAltDel;
    /** 707 */
    public boolean EnableWindowsKey;
    /** 708 */
    public boolean MaximizeShell;
    /** 709 */
    public boolean LogonNotify;
    /** 710 */
    public boolean LogonErrors;
    /** 711 */
    public boolean MouseAttached;
    /** 712 */
    public boolean MouseHasWheel;
    /** 713 */
    public boolean RemoteConsoleAudio;
    /** 714 */
    public boolean AudioPlayback;
    /** 715 */
    public boolean AudioCapture;
    /** 716 */
    public boolean VideoDisable;
    /** 717 */
    public boolean PasswordIsSmartcardPin;
    /** 718 */
    public boolean UsingSavedCredentials;
    /** 719 */
    public boolean ForceEncryptedCsPdu;
    /** 720 */
    public boolean HiDefRemoteApp;
    /** 721 */
    public UINT32 CompressionLevel;
    /** 722 */
    public UINT64[] padding0768 = new UINT64[768 - 722];
    /**
     * Client Info (Extra)<br>
     * 768
     */
    public boolean IPv6Enabled;
    /** 769 */
    public Pointer ClientAddress;
    /** 770 */
    public Pointer ClientDir;
    /** 771 */
    public UINT64[] padding0832 = new UINT64[832 - 771];
    /**
     * Client Info (Auto Reconnection)<br>
     * 832
     */
    public boolean AutoReconnectionEnabled;
    /** 833 */
    public UINT32 AutoReconnectMaxRetries;
    /** 834 */
    public ARC_CS_PRIVATE_PACKET ClientAutoReconnectCookie;
    /** 835 */
    public ARC_SC_PRIVATE_PACKET ServerAutoReconnectCookie;
    /** 836 */
    public boolean PrintReconnectCookie;
    /** 837 */
    public UINT64[] padding0896 = new UINT64[896 - 837];
    /**
     * Client Info (Time Zone)<br>
     * 896
     */
    public TIME_ZONE_INFORMATION ClientTimeZone;
    /** 897 */
    public Pointer DynamicDSTTimeZoneKeyName;
    /** 898 */
    public boolean DynamicDaylightTimeDisabled;
    /** 899 */
    public UINT64[] padding0960 = new UINT64[960 - 899];
    /**
     * Client Info (Performance Flags)<br>
     * 960
     */
    public UINT32 PerformanceFlags;
    /** 961 */
    public boolean AllowFontSmoothing;
    /** 962 */
    public boolean DisableWallpaper;
    /** 963 */
    public boolean DisableFullWindowDrag;
    /** 964 */
    public boolean DisableMenuAnims;
    /** 965 */
    public boolean DisableThemes;
    /** 966 */
    public boolean DisableCursorShadow;
    /** 967 */
    public boolean DisableCursorBlinking;
    /** 968 */
    public boolean AllowDesktopComposition;
    /** 969 */
    public UINT64[] padding1024 = new UINT64[1024 - 969];
    /**
     * Remote Assistance<br>
     * 1024
     */
    public boolean RemoteAssistanceMode;
    /** 1025 */
    public Pointer RemoteAssistanceSessionId;
    /** 1026 */
    public Pointer RemoteAssistancePassStub;
    /** 1027 */
    public Pointer RemoteAssistancePassword;
    /** 1028 */
    public Pointer RemoteAssistanceRCTicket;
    /** 1029 */
    public boolean EncomspVirtualChannel;
    /** 1030 */
    public boolean RemdeskVirtualChannel;
    /** 1031 */
    public boolean LyncRdpMode;
    /** 1032 */
    public boolean RemoteAssistanceRequestControl;
    /** 1033 */
    public UINT64[] padding1088 = new UINT64[1088 - 1033];
    /**
     * Protocol Security<br>
     * 1088
     */
    public boolean TlsSecurity;
    /** 1089 */
    public boolean NlaSecurity;
    /** 1090 */
    public boolean RdpSecurity;
    /** 1091 */
    public boolean ExtSecurity;
    /** 1092 */
    public boolean Authentication;
    /** 1093 */
    public UINT32 RequestedProtocols;
    /** 1094 */
    public UINT32 SelectedProtocol;
    /** 1095 */
    public UINT32 NegotiationFlags;
    /** 1096 */
    public boolean NegotiateSecurityLayer;
    /** 1097 */
    public boolean RestrictedAdminModeRequired;
    /** 1098 */
    public Pointer AuthenticationServiceClass;
    /** 1099 */
    public boolean DisableCredentialsDelegation;
    /** 1100 */
    public UINT32 AuthenticationLevel;
    /** 1101 */
    public Pointer AllowedTlsCiphers;
    /** 1102 */
    public boolean VmConnectMode;
    /** 1103 */
    public Pointer NtlmSamFile;
    /** 1104 */
    public boolean FIPSMode;
    /** 1105 */
    public UINT32 TlsSecLevel;
    /** 1106 */
    public UINT64[] padding1152 = new UINT64[1152 - 1106];
    /**
     * Connection Cookie<br>
     * 1152
     */
    public boolean MstscCookieMode;
    /** 1153 */
    public UINT32 CookieMaxLength;
    /** 1154 */
    public UINT32 PreconnectionId;
    /** 1155 */
    public Pointer PreconnectionBlob;
    /** 1156 */
    public boolean SendPreconnectionPdu;
    /** 1157 */
    public UINT64[] padding1216 = new UINT64[1216 - 1157];
    /**
     * Server Redirection<br>
     * 1216
     */
    public UINT32 RedirectionFlags;
    /** 1217 */
    public Pointer TargetNetAddress;
    /** 1218 */
    public Pointer LoadBalanceInfo;
    /** 1219 */
    public UINT32 LoadBalanceInfoLength;
    /** 1220 */
    public Pointer RedirectionUsername;
    /** 1221 */
    public Pointer RedirectionDomain;
    /** 1222 */
    public Pointer RedirectionPassword;
    /** 1223 */
    public UINT32 RedirectionPasswordLength;
    /** 1224 */
    public Pointer RedirectionTargetFQDN;
    /** 1225 */
    public Pointer RedirectionTargetNetBiosName;
    /** 1226 */
    public Pointer RedirectionTsvUrl;
    /** 1227 */
    public UINT32 RedirectionTsvUrlLength;
    /** 1228 */
    public UINT32 TargetNetAddressCount;
    /** 1229 */
    public PointerByReference TargetNetAddresses;
    /** 1230 */
    public UINT32 TargetNetPorts;
    /** 1231 */
    public Pointer RedirectionAcceptedCert;
    /** 1232 */
    public UINT32 RedirectionAcceptedCertLength;
    /** 1233 */
    public UINT32 RedirectionPreferType;
    /** 1234 */
    public UINT64[] padding1280 = new UINT64[1280 - 1234];
    /**
     * Credentials Cache<br>
     * 1280
     */
    public Pointer Password51;
    /** 1281 */
    public UINT32 Password51Length;
    /** 1282 */
    public boolean SmartcardLogon;
    /** 1283 */
    public boolean PromptForCredentials;
    /** 1284 */
    public UINT64[] padding1284 = new UINT64[1285 - 1284];
    /**
     * Settings used for smartcard emulation<br>
     * 1285
     */
    public Pointer SmartcardCertificate;
    /** 1286 */
    public Pointer SmartcardPrivateKey;
    /** 1287 */
    public UINT64[] padding1287 = new UINT64[1288 - 1287];
    /** 1288 */
    public boolean SmartcardEmulation;
    /** 1289 */
    public Pointer Pkcs11Module;
    /** 1290 */
    public Pointer PkinitAnchors;
    /** 1291 */
    public UINT32 KeySpec;
    /** 1292 */
    public Pointer CardName;
    /** 1293 */
    public Pointer ReaderName;
    /** 1294 */
    public Pointer ContainerName;
    /** 1295 */
    public Pointer CspName;
    /** 1296 */
    public UINT64[] padding1344 = new UINT64[1344 - 1296];
    /**
     * Kerberos Authentication<br>
     * 1344
     */
    public Pointer KerberosKdc;
    /** 1345 */
    public Pointer KerberosRealm;
    /** 1346 */
    public Pointer KerberosStartTime;
    /** 1347 */
    public Pointer KerberosLifeTime;
    /** 1348 */
    public Pointer KerberosRenewableLifeTime;
    /** 1349 */
    public Pointer KerberosCache;
    /** 1350 */
    public Pointer KerberosArmor;
    /** 1351 */
    public UINT64[] padding1408 = new UINT64[1408 - 1351];
    /**
     * Server Certificate<br>
     * 1408
     */
    public boolean IgnoreCertificate;
    /** 1409 */
    public Pointer CertificateName;
    /** 1410 */
    public Pointer CertificateFile;
    /** 1411 */
    public Pointer PrivateKeyFile;
    /** 1412 */
    public Pointer RdpKeyFile;
    /** 1413 */
    public rdpRsaKey RdpServerRsaKey;
    /** 1414 */
    public rdpCertificate RdpServerCertificate;
    /** 1415 */
    public boolean ExternalCertificateManagement;
    /** 1416 */
    public Pointer CertificateContent;
    /** 1417 */
    public Pointer PrivateKeyContent;
    /** 1418 */
    public Pointer RdpKeyContent;
    /** 1419 */
    public boolean AutoAcceptCertificate;
    /** 1420 */
    public boolean AutoDenyCertificate;
    /** 1421 */
    public Pointer CertificateAcceptedFingerprints;
    /** 1422 */
    public boolean CertificateUseKnownHosts;
    /** 1423 */
    public boolean CertificateCallbackPreferPEM;
    /** 1424 */
    public UINT64[] padding1472 = new UINT64[1472 - 1424];
    /** 1472 */
    public UINT64[] padding1536 = new UINT64[1536 - 1472];
    /**
     * Window Settings<br>
     * 1536
     */
    public boolean Workarea;
    /** 1537 */
    public boolean Fullscreen;
    /** 1538 */
    public UINT32 PercentScreen;
    /** 1539 */
    public boolean GrabKeyboard;
    /** 1540 */
    public boolean Decorations;
    /** 1541 */
    public boolean MouseMotion;
    /** 1542 */
    public Pointer WindowTitle;
    /** 1543 */
    public UINT64 ParentWindowId;
    /** 1544 */
    public UINT64[] padding1544 = new UINT64[1545 - 1544];
    /** 1545 */
    public boolean AsyncUpdate;
    /** 1546 */
    public boolean AsyncChannels;
    /** 1547 */
    public UINT64[] padding1548 = new UINT64[1548 - 1547];
    /** 1548 */
    public boolean ToggleFullscreen;
    /** 1549 */
    public Pointer WmClass;
    /** 1550 */
    public boolean EmbeddedWindow;
    /** 1551 */
    public boolean SmartSizing;
    /** 1552 */
    public INT32 XPan;
    /** 1553 */
    public INT32 YPan;
    /** 1554 */
    public UINT32 SmartSizingWidth;
    /** 1555 */
    public UINT32 SmartSizingHeight;
    /** 1556 */
    public boolean PercentScreenUseWidth;
    /** 1557 */
    public boolean PercentScreenUseHeight;
    /** 1558 */
    public boolean DynamicResolutionUpdate;
    /** 1559 */
    public boolean GrabMouse;
    /** 1560 */
    public UINT64[] padding1601 = new UINT64[1601 - 1560];
    /**
     * Miscellaneous<br>
     * 1601
     */
    public boolean SoftwareGdi;
    /** 1602 */
    public boolean LocalConnection;
    /** 1603 */
    public boolean AuthenticationOnly;
    /** 1604 */
    public boolean CredentialsFromStdin;
    /** 1605 */
    public boolean UnmapButtons;
    /** 1606 */
    public boolean OldLicenseBehaviour;
    /** 1607 */
    public boolean MouseUseRelativeMove;
    /** 1608 */
    public UINT64[] padding1664 = new UINT64[1664 - 1608];
    /**
     * Names<br>
     * 1664
     */
    public Pointer ComputerName;
    /** 1665 */
    public UINT64[] padding1728 = new UINT64[1728 - 1665];
    /**
     * Files<br>
     * 1728
     */
    public Pointer ConnectionFile;
    /** 1729 */
    public Pointer AssistanceFile;
    /** 1730 */
    public UINT64[] padding1792 = new UINT64[1792 - 1730];
    /**
     * Paths<br>
     * 1792
     */
    public Pointer HomePath;
    /** 1793 */
    public Pointer ConfigPath;
    /** 1794 */
    public Pointer CurrentPath;
    /** 1795 */
    public UINT64[] padding1856 = new UINT64[1856 - 1795];
    /**
     * Recording<br>
     * 1856
     */
    public boolean DumpRemoteFx;
    /** 1857 */
    public boolean PlayRemoteFx;
    /** 1858 */
    public Pointer DumpRemoteFxFile;
    /** 1859 */
    public Pointer PlayRemoteFxFile;
    /** 1860 */
    public boolean TransportDump;
    /** 1861 */
    public Pointer TransportDumpFile;
    /** 1862 */
    public boolean TransportDumpReplay;
    /** 1863 */
    public boolean DeactivateClientDecoding;
    /** 1864 */
    public UINT64[] padding1920 = new UINT64[1920 - 1864];
    /** 1920 */
    public UINT64[] padding1984 = new UINT64[1984 - 1920];
    /**
     * Gateway<br>
     * 1984
     */
    public UINT32 GatewayUsageMethod;
    /** 1985 */
    public UINT32 GatewayPort;
    /** 1986 */
    public Pointer GatewayHostname;
    /** 1987 */
    public Pointer GatewayUsername;
    /** 1988 */
    public Pointer GatewayPassword;
    /** 1989 */
    public Pointer GatewayDomain;
    /** 1990 */
    public UINT32 GatewayCredentialsSource;
    /** 1991 */
    public boolean GatewayUseSameCredentials;
    /** 1992 */
    public boolean GatewayEnabled;
    /** 1993 */
    public boolean GatewayBypassLocal;
    /** 1994 */
    public boolean GatewayRpcTransport;
    /** 1995 */
    public boolean GatewayHttpTransport;
    /** 1996 */
    public boolean GatewayUdpTransport;
    /** 1997 */
    public Pointer GatewayAccessToken;
    /** 1998 */
    public Pointer GatewayAcceptedCert;
    /** 1999 */
    public UINT32 GatewayAcceptedCertLength;
    /** 2000 */
    public boolean GatewayHttpUseWebsockets;
    /** 2001 */
    public UINT64[] padding2015 = new UINT64[2015 - 2001];
    /**
     * Proxy<br>
     * 2015
     */
    public UINT32 ProxyType;
    /** 2016 */
    public Pointer ProxyHostname;
    /** 2017 */
    public UINT16 ProxyPort;
    /** 2018 */
    public Pointer ProxyUsername;
    /** 2019 */
    public Pointer ProxyPassword;
    /** 2020 */
    public UINT64[] padding2112 = new UINT64[2112 - 2020];
    /**
     * RemoteApp<br>
     * 2112
     */
    public boolean RemoteApplicationMode;
    /** 2113 */
    public Pointer RemoteApplicationName;
    /** 2114 */
    public Pointer RemoteApplicationIcon;
    /** 2115 */
    public Pointer RemoteApplicationProgram;
    /** 2116 */
    public Pointer RemoteApplicationFile;
    /** 2117 */
    public Pointer RemoteApplicationGuid;
    /** 2118 */
    public Pointer RemoteApplicationCmdLine;
    /** 2119 */
    public UINT32 RemoteApplicationExpandCmdLine;
    /** 2120 */
    public UINT32 RemoteApplicationExpandWorkingDir;
    /** 2121 */
    public boolean DisableRemoteAppCapsCheck;
    /** 2122 */
    public UINT32 RemoteAppNumIconCaches;
    /** 2123 */
    public UINT32 RemoteAppNumIconCacheEntries;
    /** 2124 */
    public boolean RemoteAppLanguageBarSupported;
    /** 2125 */
    public UINT32 RemoteWndSupportLevel;
    /** 2126 */
    public UINT32 RemoteApplicationSupportLevel;
    /** 2127 */
    public UINT32 RemoteApplicationSupportMask;
    /** 2128 */
    public Pointer RemoteApplicationWorkingDir;
    /** 2129 */
    public UINT64[] padding2176 = new UINT64[2176 - 2129];
    /** 2176 */
    public UINT64[] padding2240 = new UINT64[2240 - 2176];
    /**
     * Capabilities<br>
     * 2240
     */
    public Pointer ReceivedCapabilities;
    /** 2241 */
    public UINT32 ReceivedCapabilitiesSize;
    /** 2242 */
    public UINT64[] padding2304 = new UINT64[2304 - 2242];
    /**
     * General Capabilities<br>
     * 2304
     */
    public UINT32 OsMajorType;
    /** 2305 */
    public UINT32 OsMinorType;
    /** 2306 */
    public boolean RefreshRect;
    /** 2307 */
    public boolean SuppressOutput;
    /** 2308 */
    public boolean FastPathOutput;
    /** 2309 */
    public boolean SaltedChecksum;
    /** 2310 */
    public boolean LongCredentialsSupported;
    /** 2311 */
    public boolean NoBitmapCompressionHeader;
    /** 2312 */
    public boolean BitmapCompressionDisabled;
    /** 2313 */
    public UINT64[] padding2368 = new UINT64[2368 - 2313];
    /**
     * Bitmap Capabilities<br>
     * 2368
     */
    public boolean DesktopResize;
    /** 2369 */
    public boolean DrawAllowDynamicColorFidelity;
    /** 2370 */
    public boolean DrawAllowColorSubsampling;
    /** 2371 */
    public boolean DrawAllowSkipAlpha;
    /** 2372 */
    public UINT64[] padding2432 = new UINT64[2432 - 2372];
    /**
     * Order Capabilities<br>
     * 2432
     */
    public Pointer OrderSupport;
    /** 2433 */
    public boolean BitmapCacheV3Enabled;
    /** 2434 */
    public boolean AltSecFrameMarkerSupport;
    /** 2435 */
    public boolean AllowUnanouncedOrdersFromServer;
    /** 2436 */
    public UINT64[] padding2497 = new UINT64[2497 - 2436];
    /**
     * Bitmap Cache Capabilities<br>
     * 2497
     */
    public boolean BitmapCacheEnabled;
    /** 2498 */
    public UINT32 BitmapCacheVersion;
    /** 2499 */
    public boolean AllowCacheWaitingList;
    /** 2500 */
    public boolean BitmapCachePersistEnabled;
    /** 2501 */
    public UINT32 BitmapCacheV2NumCells;
    /** 2502 */
    public BITMAP_CACHE_V2_CELL_INFO BitmapCacheV2CellInfo;
    /** 2503 */
    public UINT64[] padding2560 = new UINT64[2560 - 2503];
    /**
     * Pointer Capabilities<br>
     * 2560
     */
    public boolean ColorPointerFlag;
    /** 2561 */
    public UINT32 PointerCacheSize;
    /** 2562 */
    public UINT64[] padding2624 = new UINT64[2622 - 2562];
    /**
     * Input Capabilities<br>
     * 2622
     */
    public Pointer KeyboardRemappingList;
    /** 2623 */
    public UINT32 KeyboardCodePage;
    /** 2624 */
    public UINT32 KeyboardLayout;
    /** 2625 */
    public UINT32 KeyboardType;
    /** 2626 */
    public UINT32 KeyboardSubType;
    /** 2627 */
    public UINT32 KeyboardFunctionKey;
    /** 2628 */
    public Pointer ImeFileName;
    /** 2629 */
    public boolean UnicodeInput;
    /** 2630 */
    public boolean FastPathInput;
    /** 2631 */
    public boolean MultiTouchInput;
    /** 2632 */
    public boolean MultiTouchGestures;
    /** 2633 */
    public UINT32 KeyboardHook;
    /** 2634 */
    public boolean HasHorizontalWheel;
    /** 2635 */
    public boolean HasExtendedMouseEvent;
    /**
     * SuspendInput disables processing of keyboard/mouse/multitouch input.<br>
     * If used by an implementation ensure proper state resync after reenabling<br>
     * input<br>
     * 2636
     */
    public boolean SuspendInput;
    /** 2637 */
    public UINT64[] padding2688 = new UINT64[2688 - 2637];
    /**
     * Brush Capabilities<br>
     * 2688
     */
    public UINT32 BrushSupportLevel;
    /** 2689 */
    public UINT64[] padding2752 = new UINT64[2752 - 2689];
    /**
     * Glyph Cache Capabilities<br>
     * 2752
     */
    public UINT32 GlyphSupportLevel;
    /** 2753 */
    public GLYPH_CACHE_DEFINITION GlyphCache;
    /** 2754 */
    public GLYPH_CACHE_DEFINITION FragCache;
    /** 2755 */
    public UINT64[] padding2816 = new UINT64[2816 - 2755];
    /**
     * Offscreen Bitmap Cache<br>
     * 2816
     */
    public UINT32 OffscreenSupportLevel;
    /** 2817 */
    public UINT32 OffscreenCacheSize;
    /** 2818 */
    public UINT32 OffscreenCacheEntries;
    /** 2819 */
    public UINT64[] padding2880 = new UINT64[2880 - 2819];
    /**
     * Virtual Channel Capabilities<br>
     * 2880
     */
    public UINT32 VirtualChannelCompressionFlags;
    /** 2881 */
    public UINT32 VirtualChannelChunkSize;
    /** 2882 */
    public UINT64[] padding2944 = new UINT64[2944 - 2882];
    /**
     * Sound Capabilities<br>
     * 2944
     */
    public boolean SoundBeepsEnabled;
    /** 2945 */
    public UINT64[] padding3008 = new UINT64[3008 - 2945];
    /** 3008 */
    public UINT64[] padding3072 = new UINT64[3072 - 3008];
    /**
     * Bitmap Cache Host Capabilities<br>
     * 3072
     */
    public UINT64[] padding3136 = new UINT64[3136 - 3072];
    /**
     * Control Capabilities<br>
     * 3136
     */
    public UINT64[] padding3200 = new UINT64[3200 - 3136];
    /**
     * Window Activation Capabilities<br>
     * 3200
     */
    public UINT64[] padding3264 = new UINT64[3264 - 3200];
    /**
     * Font Capabilities<br>
     * 3264
     */
    public UINT64[] padding3328 = new UINT64[3328 - 3264];
    /**
     * Multifragment Update Capabilities<br>
     * 3328
     */
    public UINT32 MultifragMaxRequestSize;
    /** 3329 */
    public UINT64[] padding3392 = new UINT64[3392 - 3329];
    /**
     * Large Pointer Update Capabilities<br>
     * 3392
     */
    public UINT32 LargePointerFlag;
    /** 3393 */
    public UINT64[] padding3456 = new UINT64[3456 - 3393];
    /**
     * Desktop Composition Capabilities<br>
     * 3456
     */
    public UINT32 CompDeskSupportLevel;
    /** 3457 */
    public UINT64[] padding3520 = new UINT64[3520 - 3457];
    /**
     * Surface Commands Capabilities<br>
     * 3520
     */
    public boolean SurfaceCommandsEnabled;
    /** 3521 */
    public boolean FrameMarkerCommandEnabled;
    /** 3522 */
    public boolean SurfaceFrameMarkerEnabled;
    /** 3523 */
    public UINT64[] padding3584 = new UINT64[3584 - 3523];
    /** 3584 */
    public UINT64[] padding3648 = new UINT64[3648 - 3584];
    /**
     * RemoteFX<br>
     * 3648
     */
    public boolean RemoteFxOnly;
    /** 3649 */
    public boolean RemoteFxCodec;
    /** 3650 */
    public UINT32 RemoteFxCodecId;
    /** 3651 */
    public UINT32 RemoteFxCodecMode;
    /** 3652 */
    public boolean RemoteFxImageCodec;
    /** 3653 */
    public UINT32 RemoteFxCaptureFlags;
    /** 3654 */
    public UINT64[] padding3712 = new UINT64[3712 - 3654];
    /**
     * NSCodec<br>
     * 3712
     */
    public boolean NSCodec;
    /** 3713 */
    public UINT32 NSCodecId;
    /** 3714 */
    public UINT32 FrameAcknowledge;
    /** 3715 */
    public UINT32 NSCodecColorLossLevel;
    /** 3716 */
    public boolean NSCodecAllowSubsampling;
    /** 3717 */
    public boolean NSCodecAllowDynamicColorFidelity;
    /** 3718 */
    public UINT64[] padding3776 = new UINT64[3776 - 3718];
    /**
     * JPEG<br>
     * 3776
     */
    public boolean JpegCodec;
    /** 3777 */
    public UINT32 JpegCodecId;
    /** 3778 */
    public UINT32 JpegQuality;
    /** 3779 */
    public UINT64[] padding3840 = new UINT64[3840 - 3779];
    /** 3840 */
    public boolean GfxThinClient;
    /** 3841 */
    public boolean GfxSmallCache;
    /** 3842 */
    public boolean GfxProgressive;
    /** 3843 */
    public boolean GfxProgressiveV2;
    /** 3844 */
    public boolean GfxH264;
    /** 3845 */
    public boolean GfxAVC444;
    /** 3846 */
    public boolean GfxSendQoeAck;
    /** 3847 */
    public boolean GfxAVC444v2;
    /** 3848 */
    public UINT32 GfxCapsFilter;
    /** 3849 */
    public boolean GfxPlanar;
    /** 3850 */
    public UINT64[] padding3904 = new UINT64[3904 - 3850];
    /**
     * Bitmap Cache V3<br>
     * 3904
     */
    public UINT32 BitmapCacheV3CodecId;
    /** 3905 */
    public UINT64[] padding3968 = new UINT64[3968 - 3905];
    /**
     * Draw Nine Grid<br>
     * 3968
     */
    public boolean DrawNineGridEnabled;
    /** 3969 */
    public UINT32 DrawNineGridCacheSize;
    /** 3970 */
    public UINT32 DrawNineGridCacheEntries;
    /** 3971 */
    public UINT64[] padding4032 = new UINT64[4032 - 3971];
    /**
     * Draw GDI+<br>
     * 4032
     */
    public boolean DrawGdiPlusEnabled;
    /** 4033 */
    public boolean DrawGdiPlusCacheEnabled;
    /** 4034 */
    public UINT64[] padding4096 = new UINT64[4096 - 4034];
    /** 4096 */
    public UINT64[] padding4160 = new UINT64[4160 - 4096];
    /**
     * Device Redirection<br>
     * 4160
     */
    public boolean DeviceRedirection;
    /** 4161 */
    public UINT32 DeviceCount;
    /** 4162 */
    public UINT32 DeviceArraySize;
    /** 4163 */
    public PointerByReference DeviceArray;
    /** 4164 */
    public UINT64[] padding4288 = new UINT64[4288 - 4164];
    /**
     * Drive Redirection<br>
     * 4288
     */
    public boolean RedirectDrives;
    /** 4289 */
    public boolean RedirectHomeDrive;
    /** 4290 */
    public Pointer DrivesToRedirect;
    /** 4291 */
    public UINT64[] padding4416 = new UINT64[4416 - 4291];
    /**
     * Smartcard Redirection<br>
     * 4416
     */
    public boolean RedirectSmartCards;
    /** 4417 */
    public UINT64[] padding4544 = new UINT64[4544 - 4417];
    /**
     * Printer Redirection<br>
     * 4544
     */
    public boolean RedirectPrinters;
    /** 4545 */
    public UINT64[] padding4672 = new UINT64[4672 - 4545];
    /**
     * Serial and Parallel Port Redirection<br>
     * 4672
     */
    public boolean RedirectSerialPorts;
    /** 4673 */
    public boolean RedirectParallelPorts;
    /** 4674 */
    public boolean PreferIPv6OverIPv4;
    /** 4675 */
    public UINT64[] padding4800 = new UINT64[4800 - 4675];
    /** 4800 */
    public boolean RedirectClipboard;
    /** 4801 */
    public UINT64[] padding4928 = new UINT64[4928 - 4801];
    /** 4928 */
    public UINT32 StaticChannelCount;
    /** 4929 */
    public UINT32 StaticChannelArraySize;
    /** 4930 */
    public PointerByReference StaticChannelArray;
    /** 4931 */
    public UINT64[] padding5056 = new UINT64[5056 - 4931];
    /** 5056 */
    public UINT32 DynamicChannelCount;
    /** 5057 */
    public UINT32 DynamicChannelArraySize;
    /** 5058 */
    public ADDIN_ARGV[] DynamicChannelArray;
    /** 5059 */
    public boolean SupportDynamicChannels;
    /** 5060 */
    public UINT64[] padding5184 = new UINT64[5184 - 5060];
    /** 5184 */
    public boolean SupportEchoChannel;
    /** 5185 */
    public boolean SupportDisplayControl;
    /** 5186 */
    public boolean SupportGeometryTracking;
    /** 5187 */
    public boolean SupportSSHAgentChannel;
    /** 5188 */
    public boolean SupportVideoOptimized;
    /** 5189 */
    public Pointer RDP2TCPArgs;
    /** 5190 */
    public boolean TcpKeepAlive;
    /** 5191 */
    public UINT32 TcpKeepAliveRetries;
    /** 5192 */
    public UINT32 TcpKeepAliveDelay;
    /** 5193 */
    public UINT32 TcpKeepAliveInterval;
    /** 5194 */
    public UINT32 TcpAckTimeout;
    /** 5195 */
    public Pointer ActionScript;
    /** 5196 */
    public UINT32 Floatbar;
    /** 5197 */
    public UINT32 TcpConnectTimeout;
    /** 5198 */
    public UINT64[] padding5312 = new UINT64[5312 - 5198];
    /** Extensions */
    public INT32 num_extensions;
    public rdp_ext_set[] extensions = new rdp_ext_set[16];
    /**
     * byte array marking fields that have been modified from their<br>
     * default value - currently UNUSED!
     */
    public Pointer SettingsModified;
    public Pointer XSelectionAtom;
    public rdpSettings() {
        super();
    }

    protected ByReference newByReference() { return new ByReference(); }
    protected ByValue newByValue() { return new ByValue(); }
    protected rdpSettings newInstance() { return new rdpSettings(); }
    public static class ByReference extends rdpSettings implements Structure.ByReference {

    };
    public static class ByValue extends rdpSettings implements Structure.ByValue {

    };
}
